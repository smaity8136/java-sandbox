allprojects {

    group = "com.seedollar.spring.reactive"
    version = '1.0.0'

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    defaultTasks 'clean', 'build', 'install', 'idea'
    install.dependsOn ':build'
}

subprojects {

    buildscript {
        repositories {
            mavenLocal()
            maven { url 'http://hlbuildl1:8081/artifactory/repo' }
            mavenCentral()
            jcenter()
        }
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootGradlePluginVersion}")
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'http://fhlbuildl1:8081/artifactory/repo' }
        maven { url 'http://repo.spring.io/libs-release' }
        maven { url 'http://repo.spring.io/libs-milestone' }
        maven { url 'http://repo.spring.io/libs-snapshot' }
    }

    dependencies {

        compile("org.springframework.boot:spring-boot:${springBootVersion}")
        compile("org.springframework.boot:spring-boot-starter:1.5.1.RELEASE")
        compile("org.springframework.boot:spring-boot-starter-data-mongodb-reactive:${springBootVersion}")
        compile("org.springframework.data:spring-data-mongodb:${springDataMongoReactiveVersion}")
//        compile("org.springframework.boot.experimental:spring-boot-dependencies-web-reactive:0.1.0.BUILD-SNAPSHOT")
        compile("org.springframework.boot.experimental:spring-boot-starter-web-reactive:${springBootWebReactiveVersion}") {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        }
        compile("io.projectreactor:reactor-core:${projectReactorCoreVersion}")
        compile("io.projectreactor.ipc:reactor-netty:${reactorNettyVersion}")
        compile("io.netty:netty-all:${nettyVersion}")
        compile("io.javaslang:javaslang:${javaSlangVersion}")
        compile("io.javaslang:javaslang-match:${javaSlangVersion}")
        compile("com.google.guava:guava:${guavaVersion}")
        compile("org.apache.logging.log4j:log4j-core:${log4jVersion}")
        compile("org.apache.logging.log4j:log4j-jul:${log4jVersion}")

        testCompile("org.junit.platform:junit-platform-runner:${junitPlatformVersion}")
        testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
        testCompile("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
        testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
        testCompile("io.projectreactor.addons:reactor-test:${projectReactorTestVersion}")
    }
}   
